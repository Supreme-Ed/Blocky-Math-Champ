import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/copyTexture3DLayerToTexture.fragment.js
var name, shader, copyTexture3DLayerToTexturePixelShaderWGSL;
var init_copyTexture3DLayerToTexture_fragment = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/copyTexture3DLayerToTexture.fragment.js"() {
    init_shaderStore();
    name = "copyTexture3DLayerToTexturePixelShader";
    shader = `var textureSampler: texture_3d<f32>;uniform layerNum: i32;varying vUV: vec2f;@fragment
fn main(input: FragmentInputs)->FragmentOutputs {let coord=vec3f(vec2f(input.vUV.x,input.vUV.y)*vec2f(textureDimensions(textureSampler,0).xy),f32(uniforms.layerNum));let color=textureLoad(textureSampler,vec3i(coord),0).rgb;fragmentOutputs.color= vec4f(color,1);}`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    copyTexture3DLayerToTexturePixelShaderWGSL = { name, shader };
  }
});

export {
  copyTexture3DLayerToTexturePixelShaderWGSL,
  init_copyTexture3DLayerToTexture_fragment
};
//# sourceMappingURL=chunk-GMTITMBL.js.map
