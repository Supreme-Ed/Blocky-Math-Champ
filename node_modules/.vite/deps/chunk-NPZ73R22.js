import {
  init_helperFunctions
} from "./chunk-W4QLV37H.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/rgbdEncode.fragment.js
var name, shader, rgbdEncodePixelShaderWGSL;
var init_rgbdEncode_fragment = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/rgbdEncode.fragment.js"() {
    init_shaderStore();
    init_helperFunctions();
    name = "rgbdEncodePixelShader";
    shader = `varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;
#include<helperFunctions>
#define CUSTOM_FRAGMENT_DEFINITIONS
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=toRGBD(textureSample(textureSampler,textureSamplerSampler,input.vUV).rgb);}`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    rgbdEncodePixelShaderWGSL = { name, shader };
  }
});

export {
  rgbdEncodePixelShaderWGSL,
  init_rgbdEncode_fragment
};
//# sourceMappingURL=chunk-NPZ73R22.js.map
