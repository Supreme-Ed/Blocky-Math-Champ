import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/fluidRenderingParticleThickness.fragment.js
var name, shader, fluidRenderingParticleThicknessPixelShaderWGSL;
var init_fluidRenderingParticleThickness_fragment = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/fluidRenderingParticleThickness.fragment.js"() {
    init_shaderStore();
    name = "fluidRenderingParticleThicknessPixelShader";
    shader = `uniform particleAlpha: f32;varying uv: vec2f;@fragment
fn main(input: FragmentInputs)->FragmentOutputs {var normalxy: vec2f=input.uv*2.0-1.0;var r2: f32=dot(normalxy,normalxy);if (r2>1.0) {discard;}
var thickness: f32=sqrt(1.0-r2);fragmentOutputs.color=vec4f(vec3f(uniforms.particleAlpha*thickness),1.0);}
`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    fluidRenderingParticleThicknessPixelShaderWGSL = { name, shader };
  }
});

export {
  fluidRenderingParticleThicknessPixelShaderWGSL,
  init_fluidRenderingParticleThickness_fragment
};
//# sourceMappingURL=chunk-RO47KOOJ.js.map
