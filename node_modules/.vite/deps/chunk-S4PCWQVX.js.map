{
  "version": 3,
  "sources": ["../../../dev/core/src/FlowGraph/Blocks/Data/Utils/flowGraphContextBlock.ts"],
  "sourcesContent": ["import { FlowGraphBlock, type IFlowGraphBlockConfiguration } from \"core/FlowGraph/flowGraphBlock\";\nimport type { FlowGraphContext } from \"core/FlowGraph/flowGraphContext\";\nimport type { FlowGraphDataConnection } from \"core/FlowGraph/flowGraphDataConnection\";\nimport { RichTypeAny, RichTypeNumber } from \"core/FlowGraph/flowGraphRichTypes\";\nimport { FlowGraphBlockNames } from \"../../flowGraphBlockNames\";\nimport { RegisterClass } from \"core/Misc/typeStore\";\n\n/**\n * A block that outputs elements from the context\n */\nexport class FlowGraphContextBlock extends FlowGraphBlock {\n    /**\n     * Output connection: The user variables from the context\n     */\n    public readonly userVariables: FlowGraphDataConnection<FlowGraphContext[\"userVariables\"]>;\n\n    /**\n     * Output connection: The execution id from the context\n     */\n    public readonly executionId: FlowGraphDataConnection<FlowGraphContext[\"executionId\"]>;\n\n    constructor(config?: IFlowGraphBlockConfiguration) {\n        super(config);\n\n        this.userVariables = this.registerDataOutput(\"userVariables\", RichTypeAny);\n        this.executionId = this.registerDataOutput(\"executionId\", RichTypeNumber);\n    }\n\n    public override _updateOutputs(context: FlowGraphContext): void {\n        this.userVariables.setValue(context.userVariables, context);\n        this.executionId.setValue(context.executionId, context);\n    }\n\n    public override serialize(serializationObject?: any): void {\n        super.serialize(serializationObject);\n    }\n\n    public override getClassName(): string {\n        return FlowGraphBlockNames.Context;\n    }\n}\n\nRegisterClass(FlowGraphBlockNames.Context, FlowGraphContextBlock);\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA,IAUa;AAVb;;;AAGA;AAEA;AAKM,IAAO,wBAAP,cAAqC,eAAc;MAWrD,YAAY,QAAqC;AAC7C,cAAM,MAAM;AAEZ,aAAK,gBAAgB,KAAK,mBAAmB,iBAAiB,WAAW;AACzE,aAAK,cAAc,KAAK,mBAAmB,eAAe,cAAc;MAC5E;MAEgB,eAAe,SAAyB;AACpD,aAAK,cAAc,SAAS,QAAQ,eAAe,OAAO;AAC1D,aAAK,YAAY,SAAS,QAAQ,aAAa,OAAO;MAC1D;MAEgB,UAAU,qBAAyB;AAC/C,cAAM,UAAU,mBAAmB;MACvC;MAEgB,eAAY;AACxB,eAAA;MACJ;;AAGJ,kBAAa,yBAA8B,qBAAqB;;;",
  "names": []
}
