import {
  FlowGraphExecutionBlockWithOutSignal,
  init_flowGraphExecutionBlockWithOutSignal
} from "./chunk-AZ5WND6M.js";
import {
  RichTypeNumber,
  init_flowGraphRichTypes
} from "./chunk-I4L6YYX4.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.js
var FlowGraphCallCounterBlock;
var init_flowGraphCounterBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCounterBlock.js"() {
    init_flowGraphRichTypes();
    init_flowGraphExecutionBlockWithOutSignal();
    init_typeStore();
    FlowGraphCallCounterBlock = class extends FlowGraphExecutionBlockWithOutSignal {
      constructor(config) {
        super(config);
        this.count = this.registerDataOutput("count", RichTypeNumber);
        this.reset = this._registerSignalInput("reset");
      }
      _execute(context, callingSignal) {
        if (callingSignal === this.reset) {
          context._setExecutionVariable(this, "count", 0);
          this.count.setValue(0, context);
          return;
        }
        const countValue = context._getExecutionVariable(this, "count", 0) + 1;
        context._setExecutionVariable(this, "count", countValue);
        this.count.setValue(countValue, context);
        this.out._activateSignal(context);
      }
      /**
       * @returns class name of the block.
       */
      getClassName() {
        return "FlowGraphCallCounterBlock";
      }
    };
    RegisterClass("FlowGraphCallCounterBlock", FlowGraphCallCounterBlock);
  }
});

export {
  FlowGraphCallCounterBlock,
  init_flowGraphCounterBlock
};
//# sourceMappingURL=chunk-VYQJI5MR.js.map
