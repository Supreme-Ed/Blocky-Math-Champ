import {
  FlowGraphExecutionBlockWithOutSignal,
  init_flowGraphExecutionBlockWithOutSignal
} from "./chunk-AZ5WND6M.js";
import {
  RichTypeAny,
  init_flowGraphRichTypes
} from "./chunk-I4L6YYX4.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.js
var FlowGraphSetPropertyBlock;
var init_flowGraphSetPropertyBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.js"() {
    init_flowGraphExecutionBlockWithOutSignal();
    init_flowGraphRichTypes();
    init_typeStore();
    FlowGraphSetPropertyBlock = class extends FlowGraphExecutionBlockWithOutSignal {
      constructor(config) {
        super(config);
        this.config = config;
        this.object = this.registerDataInput("object", RichTypeAny, config.target);
        this.value = this.registerDataInput("value", RichTypeAny);
        this.propertyName = this.registerDataInput("propertyName", RichTypeAny, config.propertyName);
        this.customSetFunction = this.registerDataInput("customSetFunction", RichTypeAny);
      }
      _execute(context, _callingSignal) {
        try {
          const target = this.object.getValue(context);
          const value = this.value.getValue(context);
          const setFunction = this.customSetFunction.getValue(context);
          if (setFunction) {
            setFunction(target, this.propertyName.getValue(context), value, context);
          } else {
            this._setPropertyValue(target, this.propertyName.getValue(context), value);
          }
        } catch (e) {
          this._reportError(context, e);
        }
        this.out._activateSignal(context);
      }
      _setPropertyValue(target, propertyName, value) {
        const path = propertyName.split(".");
        let obj = target;
        for (let i = 0; i < path.length - 1; i++) {
          const prop = path[i];
          if (obj[prop] === void 0) {
            obj[prop] = {};
          }
          obj = obj[prop];
        }
        obj[path[path.length - 1]] = value;
      }
      getClassName() {
        return "FlowGraphSetPropertyBlock";
      }
    };
    RegisterClass("FlowGraphSetPropertyBlock", FlowGraphSetPropertyBlock);
  }
});

export {
  FlowGraphSetPropertyBlock,
  init_flowGraphSetPropertyBlock
};
//# sourceMappingURL=chunk-I3GQUKTB.js.map
