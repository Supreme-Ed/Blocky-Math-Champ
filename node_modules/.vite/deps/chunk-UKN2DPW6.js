import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/filter.fragment.js
var name, shader, filterPixelShaderWGSL;
var init_filter_fragment = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/filter.fragment.js"() {
    init_shaderStore();
    name = "filterPixelShader";
    shader = `varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform kernelMatrix: mat4x4f;
#define CUSTOM_FRAGMENT_DEFINITIONS
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {var baseColor: vec3f=textureSample(textureSampler,textureSamplerSampler,input.vUV).rgb;var updatedColor: vec3f=(uniforms.kernelMatrix* vec4f(baseColor,1.0)).rgb;fragmentOutputs.color= vec4f(updatedColor,1.0);}`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    filterPixelShaderWGSL = { name, shader };
  }
});

export {
  filterPixelShaderWGSL,
  init_filter_fragment
};
//# sourceMappingURL=chunk-UKN2DPW6.js.map
