{
  "version": 3,
  "sources": ["../../../dev/core/src/FlowGraph/Blocks/Execution/Animation/flowGraphPauseAnimationBlock.ts"],
  "sourcesContent": ["import type { FlowGraphContext } from \"../../../flowGraphContext\";\r\nimport type { FlowGraphDataConnection } from \"../../../flowGraphDataConnection\";\r\nimport { FlowGraphExecutionBlockWithOutSignal } from \"../../../flowGraphExecutionBlockWithOutSignal\";\r\nimport { RichTypeAny } from \"../../../flowGraphRichTypes\";\r\nimport type { IFlowGraphBlockConfiguration } from \"../../../flowGraphBlock\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport type { AnimationGroup } from \"core/Animations/animationGroup\";\r\nimport { FlowGraphBlockNames } from \"../../flowGraphBlockNames\";\r\n/**\r\n * @experimental\r\n * Block that pauses a running animation\r\n */\r\nexport class FlowGraphPauseAnimationBlock extends FlowGraphExecutionBlockWithOutSignal {\r\n    /**\r\n     * Input connection: The animation to pause.\r\n     */\r\n    public readonly animationToPause: FlowGraphDataConnection<AnimationGroup>;\r\n\r\n    constructor(config?: IFlowGraphBlockConfiguration) {\r\n        super(config);\r\n        this.animationToPause = this.registerDataInput(\"animationToPause\", RichTypeAny);\r\n    }\r\n\r\n    public _execute(context: FlowGraphContext): void {\r\n        const animationToPauseValue = this.animationToPause.getValue(context);\r\n        animationToPauseValue.pause();\r\n        this.out._activateSignal(context);\r\n    }\r\n\r\n    /**\r\n     * @returns class name of the block.\r\n     */\r\n    public override getClassName(): string {\r\n        return FlowGraphBlockNames.PauseAnimation;\r\n    }\r\n}\r\nRegisterClass(FlowGraphBlockNames.PauseAnimation, FlowGraphPauseAnimationBlock);\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAEA,IAUa;AAVb;;;AACA;AAEA;AAOM,IAAO,+BAAP,cAA4C,qCAAoC;MAMlF,YAAY,QAAqC;AAC7C,cAAM,MAAM;AACZ,aAAK,mBAAmB,KAAK,kBAAkB,oBAAoB,WAAW;MAClF;MAEO,SAAS,SAAyB;AACrC,cAAM,wBAAwB,KAAK,iBAAiB,SAAS,OAAO;AACpE,8BAAsB,MAAK;AAC3B,aAAK,IAAI,gBAAgB,OAAO;MACpC;;;;MAKgB,eAAY;AACxB,eAAA;MACJ;;AAEJ,kBAAa,gCAAqC,4BAA4B;;;",
  "names": []
}
