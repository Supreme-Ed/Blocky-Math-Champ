import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/glowMapMerge.vertex.js
var name, shader, glowMapMergeVertexShaderWGSL;
var init_glowMapMerge_vertex = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/glowMapMerge.vertex.js"() {
    init_shaderStore();
    name = "glowMapMergeVertexShader";
    shader = `attribute position: vec2f;varying vUV: vec2f;
#define CUSTOM_VERTEX_DEFINITIONS
@vertex
fn main(input : VertexInputs)->FragmentInputs {const madd: vec2f= vec2f(0.5,0.5);
#define CUSTOM_VERTEX_MAIN_BEGIN
vertexOutputs.vUV=input.position*madd+madd;vertexOutputs.position= vec4f(input.position,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    glowMapMergeVertexShaderWGSL = { name, shader };
  }
});

export {
  glowMapMergeVertexShaderWGSL,
  init_glowMapMerge_vertex
};
//# sourceMappingURL=chunk-S2XMLHUF.js.map
