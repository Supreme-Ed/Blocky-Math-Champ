import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/lod.fragment.js
var name, shader, lodPixelShaderWGSL;
var init_lod_fragment = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/lod.fragment.js"() {
    init_shaderStore();
    name = "lodPixelShader";
    shader = `const GammaEncodePowerApprox=1.0/2.2;varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform lod: f32;uniform gamma: i32;@fragment
fn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSampleLevel(textureSampler,textureSamplerSampler,fragmentInputs.vUV,uniforms.lod);if (uniforms.gamma==0) {fragmentOutputs.color=vec4f(pow(fragmentOutputs.color.rgb,vec3f(GammaEncodePowerApprox)),fragmentOutputs.color.a);}}
`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    lodPixelShaderWGSL = { name, shader };
  }
});

export {
  lodPixelShaderWGSL,
  init_lod_fragment
};
//# sourceMappingURL=chunk-35LDCCOK.js.map
