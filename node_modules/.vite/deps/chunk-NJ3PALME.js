import {
  FlowGraphBlock,
  defaultValueSerializationFunction,
  getRichTypeFromValue,
  init_flowGraphBlock,
  init_flowGraphRichTypes,
  init_serialization
} from "./chunk-I4L6YYX4.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphConstantBlock.js
var FlowGraphConstantBlock;
var init_flowGraphConstantBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphConstantBlock.js"() {
    init_flowGraphBlock();
    init_flowGraphRichTypes();
    init_typeStore();
    init_serialization();
    FlowGraphConstantBlock = class extends FlowGraphBlock {
      constructor(config) {
        super(config);
        this.config = config;
        this.output = this.registerDataOutput("output", getRichTypeFromValue(config.value));
      }
      _updateOutputs(context) {
        this.output.setValue(this.config.value, context);
      }
      /**
       * Gets the class name of this block
       * @returns the class name
       */
      getClassName() {
        return "FlowGraphConstantBlock";
      }
      /**
       * Serializes this block
       * @param serializationObject the object to serialize to
       * @param valueSerializeFunction the function to use to serialize the value
       */
      serialize(serializationObject = {}, valueSerializeFunction = defaultValueSerializationFunction) {
        super.serialize(serializationObject);
        valueSerializeFunction("value", this.config.value, serializationObject.config);
      }
    };
    RegisterClass("FlowGraphConstantBlock", FlowGraphConstantBlock);
  }
});

export {
  FlowGraphConstantBlock,
  init_flowGraphConstantBlock
};
//# sourceMappingURL=chunk-NJ3PALME.js.map
