import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/ShadersInclude/packingFunctions.js
var name, shader, packingFunctionsWGSL;
var init_packingFunctions = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/ShadersInclude/packingFunctions.js"() {
    init_shaderStore();
    name = "packingFunctions";
    shader = `fn pack(depth: f32)->vec4f
{const bit_shift: vec4f= vec4f(255.0*255.0*255.0,255.0*255.0,255.0,1.0);const bit_mask: vec4f= vec4f(0.0,1.0/255.0,1.0/255.0,1.0/255.0);var res: vec4f=fract(depth*bit_shift);res-=res.xxyz*bit_mask;return res;}
fn unpack(color: vec4f)->f32
{const bit_shift: vec4f= vec4f(1.0/(255.0*255.0*255.0),1.0/(255.0*255.0),1.0/255.0,1.0);return dot(color,bit_shift);}`;
    if (!ShaderStore.IncludesShadersStoreWGSL[name]) {
      ShaderStore.IncludesShadersStoreWGSL[name] = shader;
    }
    packingFunctionsWGSL = { name, shader };
  }
});

export {
  packingFunctionsWGSL,
  init_packingFunctions
};
//# sourceMappingURL=chunk-U34ZEI6E.js.map
