import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/layer.vertex.js
var name, shader, layerVertexShaderWGSL;
var init_layer_vertex = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/layer.vertex.js"() {
    init_shaderStore();
    name = "layerVertexShader";
    shader = `attribute position: vec2f;uniform scale: vec2f;uniform offset: vec2f;uniform textureMatrix: mat4x4f;varying vUV: vec2f;const madd: vec2f= vec2f(0.5,0.5);
#define CUSTOM_VERTEX_DEFINITIONS
@vertex
fn main(input : VertexInputs)->FragmentInputs {
#define CUSTOM_VERTEX_MAIN_BEGIN
var shiftedPosition: vec2f=input.position*uniforms.scale+uniforms.offset;vertexOutputs.vUV=(uniforms.textureMatrix* vec4f(shiftedPosition*madd+madd,1.0,0.0)).xy;vertexOutputs.position= vec4f(shiftedPosition,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    layerVertexShaderWGSL = { name, shader };
  }
});

export {
  layerVertexShaderWGSL,
  init_layer_vertex
};
//# sourceMappingURL=chunk-225QJMCS.js.map
