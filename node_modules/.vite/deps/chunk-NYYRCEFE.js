import {
  init_packingFunctions
} from "./chunk-QKUPXMF3.js";
import {
  init_clipPlaneFragment
} from "./chunk-TBDBIMGM.js";
import {
  init_clipPlaneFragmentDeclaration
} from "./chunk-WZ3KSQ3M.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/Shaders/depth.fragment.js
var name, shader, depthPixelShader;
var init_depth_fragment = __esm({
  "node_modules/@babylonjs/core/Shaders/depth.fragment.js"() {
    init_shaderStore();
    init_clipPlaneFragmentDeclaration();
    init_packingFunctions();
    init_clipPlaneFragment();
    name = "depthPixelShader";
    shader = `#ifdef ALPHATEST
varying vec2 vUV;uniform sampler2D diffuseSampler;
#endif
#include<clipPlaneFragmentDeclaration>
varying float vDepthMetric;
#ifdef PACKED
#include<packingFunctions>
#endif
#ifdef STORE_CAMERASPACE_Z
varying vec4 vViewPos;
#endif
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void)
{
#include<clipPlaneFragment>
#ifdef ALPHATEST
if (texture2D(diffuseSampler,vUV).a<0.4)
discard;
#endif
#ifdef STORE_CAMERASPACE_Z
#ifdef PACKED
gl_FragColor=pack(vViewPos.z);
#else
gl_FragColor=vec4(vViewPos.z,0.0,0.0,1.0);
#endif
#else
#ifdef NONLINEARDEPTH
#ifdef PACKED
gl_FragColor=pack(gl_FragCoord.z);
#else
gl_FragColor=vec4(gl_FragCoord.z,0.0,0.0,0.0);
#endif
#else
#ifdef PACKED
gl_FragColor=pack(vDepthMetric);
#else
gl_FragColor=vec4(vDepthMetric,0.0,0.0,1.0);
#endif
#endif
#endif
}`;
    if (!ShaderStore.ShadersStore[name]) {
      ShaderStore.ShadersStore[name] = shader;
    }
    depthPixelShader = { name, shader };
  }
});

export {
  depthPixelShader,
  init_depth_fragment
};
//# sourceMappingURL=chunk-NYYRCEFE.js.map
