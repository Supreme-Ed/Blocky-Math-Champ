import {
  init_logDepthFragment
} from "./chunk-OJENSRJA.js";
import {
  init_clipPlaneFragment
} from "./chunk-34ARFYNC.js";
import {
  init_clipPlaneFragmentDeclaration
} from "./chunk-7IS4JLSR.js";
import {
  init_logDepthDeclaration
} from "./chunk-K3XAGB54.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/outline.fragment.js
var name, shader, outlinePixelShaderWGSL;
var init_outline_fragment = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/outline.fragment.js"() {
    init_shaderStore();
    init_clipPlaneFragmentDeclaration();
    init_logDepthDeclaration();
    init_clipPlaneFragment();
    init_logDepthFragment();
    name = "outlinePixelShader";
    shader = `uniform color: vec4f;
#ifdef ALPHATEST
varying vUV: vec2f;var diffuseSamplerSampler: sampler;var diffuseSampler: texture_2d<f32>;
#endif
#include<clipPlaneFragmentDeclaration>
#include<logDepthDeclaration>
#define CUSTOM_FRAGMENT_DEFINITIONS
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {
#define CUSTOM_FRAGMENT_MAIN_BEGIN
#include<clipPlaneFragment>
#ifdef ALPHATEST
if (textureSample(diffuseSampler,diffuseSamplerSampler,fragmentInputs.vUV).a<0.4) {discard;}
#endif
#include<logDepthFragment>
fragmentOutputs.color=uniforms.color;
#define CUSTOM_FRAGMENT_MAIN_END
}`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    outlinePixelShaderWGSL = { name, shader };
  }
});

export {
  outlinePixelShaderWGSL,
  init_outline_fragment
};
//# sourceMappingURL=chunk-N3E5GJ6B.js.map
