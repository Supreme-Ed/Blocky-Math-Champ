{
  "version": 3,
  "sources": ["../../../dev/core/src/Shaders/hdrIrradianceFiltering.fragment.ts"],
  "sourcesContent": ["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\nimport \"./ShadersInclude/helperFunctions\";\nimport \"./ShadersInclude/importanceSampling\";\nimport \"./ShadersInclude/pbrBRDFFunctions\";\nimport \"./ShadersInclude/hdrFilteringFunctions\";\n\nconst name = \"hdrIrradianceFilteringPixelShader\";\nconst shader = `#include<helperFunctions>\n#include<importanceSampling>\n#include<pbrBRDFFunctions>\n#include<hdrFilteringFunctions>\nuniform samplerCube inputTexture;\n#ifdef IBL_CDF_FILTERING\nuniform sampler2D icdfTexture;\n#endif\nuniform vec2 vFilteringInfo;uniform float hdrScale;varying vec3 direction;void main() {vec3 color=irradiance(inputTexture,direction,vFilteringInfo\n#ifdef IBL_CDF_FILTERING\n,icdfTexture\n#endif\n);gl_FragColor=vec4(color*hdrScale,1.0);}`;\n// Sideeffect\nif (!ShaderStore.ShadersStore[name]) {\n    ShaderStore.ShadersStore[name] = shader;\n}\n/** @internal */\nexport const hdrIrradianceFilteringPixelShader = { name, shader };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,IAOM,MACA,QAkBO;AA1Bb;;AACA;AACA;AACA;AACA;AACA;AAEA,IAAM,OAAO;AACb,IAAM,SAAS;;;;;;;;;;;;;AAcf,QAAI,CAAC,YAAY,aAAa,IAAI,GAAG;AACjC,kBAAY,aAAa,IAAI,IAAI;IACrC;AAEO,IAAM,oCAAoC,EAAE,MAAM,OAAM;;;",
  "names": []
}
