import {
  init_fogFragment
} from "./chunk-GDBGCEHQ.js";
import {
  init_fogFragmentDeclaration
} from "./chunk-CVA6X54Q.js";
import {
  init_clipPlaneFragmentDeclaration
} from "./chunk-WZ3KSQ3M.js";
import {
  init_clipPlaneFragment
} from "./chunk-TBDBIMGM.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/Shaders/color.fragment.js
var name, shader, colorPixelShader;
var init_color_fragment = __esm({
  "node_modules/@babylonjs/core/Shaders/color.fragment.js"() {
    init_shaderStore();
    init_clipPlaneFragmentDeclaration();
    init_fogFragmentDeclaration();
    init_clipPlaneFragment();
    init_fogFragment();
    name = "colorPixelShader";
    shader = `#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)
#define VERTEXCOLOR
varying vec4 vColor;
#else
uniform vec4 color;
#endif
#include<clipPlaneFragmentDeclaration>
#include<fogFragmentDeclaration>
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void) {
#define CUSTOM_FRAGMENT_MAIN_BEGIN
#include<clipPlaneFragment>
#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)
gl_FragColor=vColor;
#else
gl_FragColor=color;
#endif
#include<fogFragment>(color,gl_FragColor)
#define CUSTOM_FRAGMENT_MAIN_END
}`;
    if (!ShaderStore.ShadersStore[name]) {
      ShaderStore.ShadersStore[name] = shader;
    }
    colorPixelShader = { name, shader };
  }
});

export {
  colorPixelShader,
  init_color_fragment
};
//# sourceMappingURL=chunk-R5E4I3C4.js.map
