import {
  FlowGraphExecutionBlockWithOutSignal,
  init_flowGraphExecutionBlockWithOutSignal
} from "./chunk-AZ5WND6M.js";
import {
  RichTypeNumber,
  init_flowGraphRichTypes
} from "./chunk-I4L6YYX4.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.js
var FlowGraphDebounceBlock;
var init_flowGraphDebounceBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDebounceBlock.js"() {
    init_flowGraphRichTypes();
    init_flowGraphExecutionBlockWithOutSignal();
    init_typeStore();
    FlowGraphDebounceBlock = class extends FlowGraphExecutionBlockWithOutSignal {
      constructor(config) {
        super(config);
        this.count = this.registerDataInput("count", RichTypeNumber);
        this.reset = this._registerSignalInput("reset");
        this.currentCount = this.registerDataOutput("currentCount", RichTypeNumber);
      }
      _execute(context, callingSignal) {
        if (callingSignal === this.reset) {
          context._setExecutionVariable(this, "debounceCount", 0);
          return;
        }
        const count = this.count.getValue(context);
        const currentCount = context._getExecutionVariable(this, "debounceCount", 0);
        const newCount = currentCount + 1;
        this.currentCount.setValue(newCount, context);
        context._setExecutionVariable(this, "debounceCount", newCount);
        if (newCount >= count) {
          this.out._activateSignal(context);
          context._setExecutionVariable(this, "debounceCount", 0);
        }
      }
      /**
       * @returns class name of the block.
       */
      getClassName() {
        return "FlowGraphDebounceBlock";
      }
    };
    RegisterClass("FlowGraphDebounceBlock", FlowGraphDebounceBlock);
  }
});

export {
  FlowGraphDebounceBlock,
  init_flowGraphDebounceBlock
};
//# sourceMappingURL=chunk-NGKENGAK.js.map
