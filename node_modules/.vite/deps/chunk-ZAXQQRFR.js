import {
  FlowGraphExecutionBlock,
  init_flowGraphExecutionBlock
} from "./chunk-FJHX462L.js";
import {
  RichTypeBoolean,
  init_flowGraphRichTypes
} from "./chunk-I4L6YYX4.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.js
var FlowGraphFlipFlopBlock;
var init_flowGraphFlipFlopBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.js"() {
    init_flowGraphExecutionBlock();
    init_flowGraphRichTypes();
    init_typeStore();
    FlowGraphFlipFlopBlock = class extends FlowGraphExecutionBlock {
      constructor(config) {
        super(config);
        this.onOn = this._registerSignalOutput("onOn");
        this.onOff = this._registerSignalOutput("onOff");
        this.value = this.registerDataOutput("value", RichTypeBoolean);
      }
      _execute(context, _callingSignal) {
        var _a;
        let value = context._getExecutionVariable(this, "value", typeof ((_a = this.config) == null ? void 0 : _a.startValue) === "boolean" ? !this.config.startValue : false);
        value = !value;
        context._setExecutionVariable(this, "value", value);
        this.value.setValue(value, context);
        if (value) {
          this.onOn._activateSignal(context);
        } else {
          this.onOff._activateSignal(context);
        }
      }
      /**
       * @returns class name of the block.
       */
      getClassName() {
        return "FlowGraphFlipFlopBlock";
      }
    };
    RegisterClass("FlowGraphFlipFlopBlock", FlowGraphFlipFlopBlock);
  }
});

export {
  FlowGraphFlipFlopBlock,
  init_flowGraphFlipFlopBlock
};
//# sourceMappingURL=chunk-ZAXQQRFR.js.map
