import {
  getNumericValue,
  init_utils,
  isNumeric
} from "./chunk-FPMUWFNC.js";
import {
  FlowGraphBlock,
  RichTypeAny,
  init_flowGraphBlock,
  init_flowGraphRichTypes
} from "./chunk-I4L6YYX4.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphDataSwitchBlock.js
var FlowGraphDataSwitchBlock;
var init_flowGraphDataSwitchBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphDataSwitchBlock.js"() {
    init_flowGraphBlock();
    init_flowGraphRichTypes();
    init_utils();
    init_typeStore();
    FlowGraphDataSwitchBlock = class extends FlowGraphBlock {
      constructor(config) {
        super(config);
        this.config = config;
        this._inputCases = /* @__PURE__ */ new Map();
        this.case = this.registerDataInput("case", RichTypeAny, NaN);
        this.default = this.registerDataInput("default", RichTypeAny);
        this.value = this.registerDataOutput("value", RichTypeAny);
        (this.config.cases || []).forEach((caseValue) => {
          caseValue = getNumericValue(caseValue);
          if (this.config.treatCasesAsIntegers) {
            caseValue = caseValue | 0;
            if (this._inputCases.has(caseValue)) {
              return;
            }
          }
          this._inputCases.set(caseValue, this.registerDataInput(`in_${caseValue}`, RichTypeAny));
        });
      }
      _updateOutputs(context) {
        const selectionValue = this.case.getValue(context);
        let outputValue;
        if (isNumeric(selectionValue)) {
          outputValue = this._getOutputValueForCase(getNumericValue(selectionValue), context);
        } else {
          outputValue = this.default.getValue(context);
        }
        this.value.setValue(outputValue, context);
      }
      _getOutputValueForCase(caseValue, context) {
        var _a;
        return (_a = this._inputCases.get(caseValue)) == null ? void 0 : _a.getValue(context);
      }
      getClassName() {
        return "FlowGraphDataSwitchBlock";
      }
    };
    RegisterClass("FlowGraphDataSwitchBlock", FlowGraphDataSwitchBlock);
  }
});

export {
  FlowGraphDataSwitchBlock,
  init_flowGraphDataSwitchBlock
};
//# sourceMappingURL=chunk-2IE4WVA4.js.map
