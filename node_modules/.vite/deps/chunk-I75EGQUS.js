import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/hdrIrradianceFiltering.vertex.js
var name, shader, hdrIrradianceFilteringVertexShaderWGSL;
var init_hdrIrradianceFiltering_vertex = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/hdrIrradianceFiltering.vertex.js"() {
    init_shaderStore();
    name = "hdrIrradianceFilteringVertexShader";
    shader = `attribute position: vec2f;varying direction: vec3f;uniform up: vec3f;uniform right: vec3f;uniform front: vec3f;
#define CUSTOM_VERTEX_DEFINITIONS
@vertex
fn main(input : VertexInputs)->FragmentInputs {
#define CUSTOM_VERTEX_MAIN_BEGIN
var view: mat3x3f= mat3x3f(uniforms.up,uniforms.right,uniforms.front);vertexOutputs.direction=view*vec3f(input.position,1.0);vertexOutputs.position= vec4f(input.position,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    hdrIrradianceFilteringVertexShaderWGSL = { name, shader };
  }
});

export {
  hdrIrradianceFilteringVertexShaderWGSL,
  init_hdrIrradianceFiltering_vertex
};
//# sourceMappingURL=chunk-I75EGQUS.js.map
