import {
  init_helperFunctions
} from "./chunk-W4QLV37H.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/extractHighlights.fragment.js
var name, shader, extractHighlightsPixelShaderWGSL;
var init_extractHighlights_fragment = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/extractHighlights.fragment.js"() {
    init_shaderStore();
    init_helperFunctions();
    name = "extractHighlightsPixelShader";
    shader = `#include<helperFunctions>
varying vUV: vec2f;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;uniform threshold: f32;uniform exposure: f32;
#define CUSTOM_FRAGMENT_DEFINITIONS
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=textureSample(textureSampler,textureSamplerSampler,input.vUV);var luma: f32=dot(LuminanceEncodeApprox,fragmentOutputs.color.rgb*uniforms.exposure);fragmentOutputs.color=vec4f(step(uniforms.threshold,luma)*fragmentOutputs.color.rgb,fragmentOutputs.color.a);}`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    extractHighlightsPixelShaderWGSL = { name, shader };
  }
});

export {
  extractHighlightsPixelShaderWGSL,
  init_extractHighlights_fragment
};
//# sourceMappingURL=chunk-4VUDX6T5.js.map
