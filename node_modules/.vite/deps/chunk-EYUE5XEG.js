import {
  FlowGraphExecutionBlockWithOutSignal,
  init_flowGraphExecutionBlockWithOutSignal
} from "./chunk-AZ5WND6M.js";
import {
  RichTypeNumber,
  init_flowGraphRichTypes
} from "./chunk-I4L6YYX4.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCancelDelayBlock.js
var FlowGraphCancelDelayBlock;
var init_flowGraphCancelDelayBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphCancelDelayBlock.js"() {
    init_typeStore();
    init_flowGraphExecutionBlockWithOutSignal();
    init_flowGraphRichTypes();
    FlowGraphCancelDelayBlock = class extends FlowGraphExecutionBlockWithOutSignal {
      constructor(config) {
        super(config);
        this.delayIndex = this.registerDataInput("delayIndex", RichTypeNumber);
      }
      _execute(context, _callingSignal) {
        const delayIndex = this.delayIndex.getValue(context);
        if (delayIndex <= 0 || isNaN(delayIndex) || !isFinite(delayIndex)) {
          return this._reportError(context, "Invalid delay index");
        }
        const timers = context._getExecutionVariable(this, "pendingDelays", []);
        const timer = timers[delayIndex];
        if (timer) {
          timer.dispose();
        }
        this.out._activateSignal(context);
      }
      getClassName() {
        return "FlowGraphCancelDelayBlock";
      }
    };
    RegisterClass("FlowGraphCancelDelayBlock", FlowGraphCancelDelayBlock);
  }
});

export {
  FlowGraphCancelDelayBlock,
  init_flowGraphCancelDelayBlock
};
//# sourceMappingURL=chunk-EYUE5XEG.js.map
