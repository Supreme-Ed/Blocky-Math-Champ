import {
  init_helperFunctions
} from "./chunk-W4QLV37H.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/copyTextureToTexture.fragment.js
var name, shader, copyTextureToTexturePixelShaderWGSL;
var init_copyTextureToTexture_fragment = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/copyTextureToTexture.fragment.js"() {
    init_shaderStore();
    init_helperFunctions();
    name = "copyTextureToTexturePixelShader";
    shader = `uniform conversion: f32;var textureSamplerSampler: sampler;var textureSampler: texture_2d<f32>;varying vUV: vec2f;
#include<helperFunctions>
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {var color: vec4f=textureSample(textureSampler,textureSamplerSampler,input.vUV);
#ifdef DEPTH_TEXTURE
fragmentOutputs.fragDepth=color.r;
#else
if (uniforms.conversion==1.) {color=toLinearSpaceVec4(color);} else if (uniforms.conversion==2.) {color=toGammaSpace(color);}
fragmentOutputs.color=color;
#endif
}
`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    copyTextureToTexturePixelShaderWGSL = { name, shader };
  }
});

export {
  copyTextureToTexturePixelShaderWGSL,
  init_copyTextureToTexture_fragment
};
//# sourceMappingURL=chunk-T5Q4MTI4.js.map
