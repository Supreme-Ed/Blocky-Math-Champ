import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/Shaders/iblVoxelGrid2dArrayDebug.fragment.js
var name, shader, iblVoxelGrid2dArrayDebugPixelShader;
var init_iblVoxelGrid2dArrayDebug_fragment = __esm({
  "node_modules/@babylonjs/core/Shaders/iblVoxelGrid2dArrayDebug.fragment.js"() {
    init_shaderStore();
    name = "iblVoxelGrid2dArrayDebugPixelShader";
    shader = `precision highp sampler2DArray;varying vec2 vUV;uniform sampler2DArray voxelTexture;uniform sampler2D textureSampler;uniform int slice;void main(void) {ivec3 size=textureSize(voxelTexture,0);float dimension=sqrt(float(size.z));vec2 samplePos=fract(vUV.xy*vec2(dimension));int sampleIndex=int(floor(vUV.x*float(dimension))+floor(vUV.y*float(dimension))*dimension);glFragColor.rgb=texture(voxelTexture,vec3(samplePos.xy,sampleIndex)).rrr;glFragColor.a=1.0;glFragColor.rgb+=texture(textureSampler,vUV.xy).rgb;}`;
    if (!ShaderStore.ShadersStore[name]) {
      ShaderStore.ShadersStore[name] = shader;
    }
    iblVoxelGrid2dArrayDebugPixelShader = { name, shader };
  }
});

export {
  iblVoxelGrid2dArrayDebugPixelShader,
  init_iblVoxelGrid2dArrayDebug_fragment
};
//# sourceMappingURL=chunk-D4OZFVLF.js.map
