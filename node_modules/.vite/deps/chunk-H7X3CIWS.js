import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/Shaders/iblVoxelSlabDebug.vertex.js
var name, shader, iblVoxelSlabDebugVertexShader;
var init_iblVoxelSlabDebug_vertex = __esm({
  "node_modules/@babylonjs/core/Shaders/iblVoxelSlabDebug.vertex.js"() {
    init_shaderStore();
    name = "iblVoxelSlabDebugVertexShader";
    shader = `attribute vec3 position;varying vec3 vNormalizedPosition;uniform mat4 world;uniform mat4 invWorldScale;uniform mat4 cameraViewMatrix;uniform mat4 projection;uniform mat4 viewMatrix;void main(void) {vec4 worldPosition=(world*vec4(position,1.));gl_Position=projection*cameraViewMatrix*worldPosition;vNormalizedPosition=(viewMatrix*invWorldScale*worldPosition).rgb;vNormalizedPosition.xyz=vNormalizedPosition.xyz*vec3(0.5)+vec3(0.5);}`;
    if (!ShaderStore.ShadersStore[name]) {
      ShaderStore.ShadersStore[name] = shader;
    }
    iblVoxelSlabDebugVertexShader = { name, shader };
  }
});

export {
  iblVoxelSlabDebugVertexShader,
  init_iblVoxelSlabDebug_vertex
};
//# sourceMappingURL=chunk-H7X3CIWS.js.map
