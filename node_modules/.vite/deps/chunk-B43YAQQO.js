import {
  FlowGraphBlock,
  RichTypeAny,
  init_flowGraphBlock,
  init_flowGraphRichTypes
} from "./chunk-I4L6YYX4.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.js
var FlowGraphGetVariableBlock;
var init_flowGraphGetVariableBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.js"() {
    init_flowGraphBlock();
    init_flowGraphRichTypes();
    init_typeStore();
    FlowGraphGetVariableBlock = class extends FlowGraphBlock {
      /**
       * Construct a FlowGraphGetVariableBlock.
       * @param config construction parameters
       */
      constructor(config) {
        super(config);
        this.config = config;
        this.value = this.registerDataOutput("value", RichTypeAny, config.initialValue);
      }
      /**
       * @internal
       */
      _updateOutputs(context) {
        const variableNameValue = this.config.variable;
        if (context.hasVariable(variableNameValue)) {
          this.value.setValue(context.getVariable(variableNameValue), context);
        }
      }
      /**
       * Serializes this block
       * @param serializationObject the object to serialize to
       */
      serialize(serializationObject) {
        super.serialize(serializationObject);
        serializationObject.config.variable = this.config.variable;
      }
      getClassName() {
        return "FlowGraphGetVariableBlock";
      }
    };
    RegisterClass("FlowGraphGetVariableBlock", FlowGraphGetVariableBlock);
  }
});

export {
  FlowGraphGetVariableBlock,
  init_flowGraphGetVariableBlock
};
//# sourceMappingURL=chunk-B43YAQQO.js.map
