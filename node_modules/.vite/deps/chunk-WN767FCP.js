import {
  FlowGraphExecutionBlockWithOutSignal,
  init_flowGraphExecutionBlockWithOutSignal
} from "./chunk-AZ5WND6M.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-D6A73UHJ.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Event/flowGraphSendCustomEventBlock.js
var FlowGraphSendCustomEventBlock;
var init_flowGraphSendCustomEventBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Event/flowGraphSendCustomEventBlock.js"() {
    init_flowGraphExecutionBlockWithOutSignal();
    init_typeStore();
    FlowGraphSendCustomEventBlock = class extends FlowGraphExecutionBlockWithOutSignal {
      constructor(config) {
        super(config);
        this.config = config;
        for (const key in this.config.eventData) {
          this.registerDataInput(key, this.config.eventData[key].type, this.config.eventData[key].value);
        }
      }
      _execute(context) {
        const eventId = this.config.eventId;
        const eventData = {};
        this.dataInputs.forEach((port) => {
          eventData[port.name] = port.getValue(context);
        });
        context.configuration.coordinator.notifyCustomEvent(eventId, eventData);
        this.out._activateSignal(context);
      }
      /**
       * @returns class name of the block.
       */
      getClassName() {
        return "FlowGraphReceiveCustomEventBlock";
      }
    };
    RegisterClass("FlowGraphReceiveCustomEventBlock", FlowGraphSendCustomEventBlock);
  }
});

export {
  FlowGraphSendCustomEventBlock,
  init_flowGraphSendCustomEventBlock
};
//# sourceMappingURL=chunk-WN767FCP.js.map
