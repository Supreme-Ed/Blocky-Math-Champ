{
  "version": 3,
  "sources": ["../../../dev/core/src/ShadersWGSL/picking.fragment.ts"],
  "sourcesContent": ["// Do not edit.\nimport { ShaderStore } from \"../Engines/shaderStore\";\n\nconst name = \"pickingPixelShader\";\nconst shader = `#if defined(INSTANCES)\nvarying vMeshID: vec4f;\n#else\nuniform meshID: vec4f;\n#endif\n@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {\n#if defined(INSTANCES)\nfragmentOutputs.color=input.vMeshID;\n#else\nfragmentOutputs.color=uniforms.meshID;\n#endif\n}`;\n// Sideeffect\nif (!ShaderStore.ShadersStoreWGSL[name]) {\n    ShaderStore.ShadersStoreWGSL[name] = shader;\n}\n/** @internal */\nexport const pickingPixelShaderWGSL = { name, shader };\n"],
  "mappings": ";;;;;;;;;AAAA,IAGM,MACA,QAkBO;AAtBb;;AACA;AAEA,IAAM,OAAO;AACb,IAAM,SAAS;;;;;;;;;;;;;AAcf,QAAI,CAAC,YAAY,iBAAiB,IAAI,GAAG;AACrC,kBAAY,iBAAiB,IAAI,IAAI;IACzC;AAEO,IAAM,yBAAyB,EAAE,MAAM,OAAM;;;",
  "names": []
}
