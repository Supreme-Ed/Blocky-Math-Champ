import {
  init_kernelBlurVaryingDeclaration
} from "./chunk-7HAJGSAZ.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/Shaders/ShadersInclude/kernelBlurVertex.js
var name, shader;
var init_kernelBlurVertex = __esm({
  "node_modules/@babylonjs/core/Shaders/ShadersInclude/kernelBlurVertex.js"() {
    init_shaderStore();
    name = "kernelBlurVertex";
    shader = `sampleCoord{X}=sampleCenter+delta*KERNEL_OFFSET{X};`;
    if (!ShaderStore.IncludesShadersStore[name]) {
      ShaderStore.IncludesShadersStore[name] = shader;
    }
  }
});

// node_modules/@babylonjs/core/Shaders/kernelBlur.vertex.js
var name2, shader2, kernelBlurVertexShader;
var init_kernelBlur_vertex = __esm({
  "node_modules/@babylonjs/core/Shaders/kernelBlur.vertex.js"() {
    init_shaderStore();
    init_kernelBlurVaryingDeclaration();
    init_kernelBlurVertex();
    name2 = "kernelBlurVertexShader";
    shader2 = `attribute vec2 position;uniform vec2 delta;varying vec2 sampleCenter;
#include<kernelBlurVaryingDeclaration>[0..varyingCount]
const vec2 madd=vec2(0.5,0.5);
#define CUSTOM_VERTEX_DEFINITIONS
void main(void) {
#define CUSTOM_VERTEX_MAIN_BEGIN
sampleCenter=(position*madd+madd);
#include<kernelBlurVertex>[0..varyingCount]
gl_Position=vec4(position,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}`;
    if (!ShaderStore.ShadersStore[name2]) {
      ShaderStore.ShadersStore[name2] = shader2;
    }
    kernelBlurVertexShader = { name: name2, shader: shader2 };
  }
});

export {
  kernelBlurVertexShader,
  init_kernelBlur_vertex
};
//# sourceMappingURL=chunk-624HZ5M5.js.map
