import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/Events/keyboardEvents.js
var KeyboardEventTypes, KeyboardInfo, KeyboardInfoPre;
var init_keyboardEvents = __esm({
  "node_modules/@babylonjs/core/Events/keyboardEvents.js"() {
    KeyboardEventTypes = class {
    };
    KeyboardEventTypes.KEYDOWN = 1;
    KeyboardEventTypes.KEYUP = 2;
    KeyboardInfo = class {
      /**
       * Instantiates a new keyboard info.
       * This class is used to store keyboard related info for the onKeyboardObservable event.
       * @param type Defines the type of event (KeyboardEventTypes)
       * @param event Defines the related dom event
       */
      constructor(type, event) {
        this.type = type;
        this.event = event;
      }
    };
    KeyboardInfoPre = class extends KeyboardInfo {
      /**
       * Defines whether the engine should skip the next onKeyboardObservable associated to this pre.
       * @deprecated use skipOnKeyboardObservable property instead
       */
      get skipOnPointerObservable() {
        return this.skipOnKeyboardObservable;
      }
      set skipOnPointerObservable(value) {
        this.skipOnKeyboardObservable = value;
      }
      /**
       * Instantiates a new keyboard pre info.
       * This class is used to store keyboard related info for the onPreKeyboardObservable event.
       * @param type Defines the type of event (KeyboardEventTypes)
       * @param event Defines the related dom event
       */
      constructor(type, event) {
        super(type, event);
        this.type = type;
        this.event = event;
        this.skipOnKeyboardObservable = false;
      }
    };
  }
});

export {
  KeyboardEventTypes,
  KeyboardInfo,
  KeyboardInfoPre,
  init_keyboardEvents
};
//# sourceMappingURL=chunk-T64DA7HW.js.map
