import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/ShadersWGSL/postprocess.vertex.js
var name, shader, postprocessVertexShaderWGSL;
var init_postprocess_vertex = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/postprocess.vertex.js"() {
    init_shaderStore();
    name = "postprocessVertexShader";
    shader = `attribute position: vec2<f32>;uniform scale: vec2<f32>;varying vUV: vec2<f32>;const madd=vec2(0.5,0.5);
#define CUSTOM_VERTEX_DEFINITIONS
@vertex
fn main(input : VertexInputs)->FragmentInputs {
#define CUSTOM_VERTEX_MAIN_BEGIN
vertexOutputs.vUV=(vertexInputs.position*madd+madd)*uniforms.scale;vertexOutputs.position=vec4(vertexInputs.position,0.0,1.0);
#define CUSTOM_VERTEX_MAIN_END
}
`;
    if (!ShaderStore.ShadersStoreWGSL[name]) {
      ShaderStore.ShadersStoreWGSL[name] = shader;
    }
    postprocessVertexShaderWGSL = { name, shader };
  }
});

export {
  postprocessVertexShaderWGSL,
  init_postprocess_vertex
};
//# sourceMappingURL=chunk-MZ7Y2B63.js.map
