import {
  init_logDepthVertex
} from "./chunk-EFGB4UFK.js";
import {
  init_logDepthDeclaration
} from "./chunk-X2LMR5XM.js";
import {
  init_instancesDeclaration
} from "./chunk-FROGOQEC.js";
import {
  init_instancesVertex
} from "./chunk-IR3BSCAE.js";
import {
  init_bakedVertexAnimation,
  init_bakedVertexAnimationDeclaration
} from "./chunk-4R57ZCSL.js";
import {
  init_morphTargetsVertexDeclaration
} from "./chunk-7AHNQASC.js";
import {
  init_morphTargetsVertexGlobal
} from "./chunk-MFDDVM5D.js";
import {
  init_morphTargetsVertex
} from "./chunk-3SNVQ6TH.js";
import {
  init_bonesVertex
} from "./chunk-KWJQWNEG.js";
import {
  init_bonesDeclaration
} from "./chunk-ZMBQROJF.js";
import {
  init_morphTargetsVertexGlobalDeclaration
} from "./chunk-AQUJQD2W.js";
import {
  init_clipPlaneVertexDeclaration
} from "./chunk-AMN47ABW.js";
import {
  init_clipPlaneVertex
} from "./chunk-C3VSXRMA.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-IU6YKOYY.js";
import {
  __esm
} from "./chunk-EWTE5DHJ.js";

// node_modules/@babylonjs/core/Shaders/outline.vertex.js
var name, shader, outlineVertexShader;
var init_outline_vertex = __esm({
  "node_modules/@babylonjs/core/Shaders/outline.vertex.js"() {
    init_shaderStore();
    init_bonesDeclaration();
    init_bakedVertexAnimationDeclaration();
    init_morphTargetsVertexGlobalDeclaration();
    init_morphTargetsVertexDeclaration();
    init_clipPlaneVertexDeclaration();
    init_instancesDeclaration();
    init_logDepthDeclaration();
    init_morphTargetsVertexGlobal();
    init_morphTargetsVertex();
    init_instancesVertex();
    init_bonesVertex();
    init_bakedVertexAnimation();
    init_clipPlaneVertex();
    init_logDepthVertex();
    name = "outlineVertexShader";
    shader = `attribute vec3 position;attribute vec3 normal;
#include<bonesDeclaration>
#include<bakedVertexAnimationDeclaration>
#include<morphTargetsVertexGlobalDeclaration>
#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]
#include<clipPlaneVertexDeclaration>
uniform float offset;
#include<instancesDeclaration>
uniform mat4 viewProjection;
#ifdef ALPHATEST
varying vec2 vUV;uniform mat4 diffuseMatrix;
#ifdef UV1
attribute vec2 uv;
#endif
#ifdef UV2
attribute vec2 uv2;
#endif
#endif
#include<logDepthDeclaration>
#define CUSTOM_VERTEX_DEFINITIONS
void main(void)
{vec3 positionUpdated=position;vec3 normalUpdated=normal;
#ifdef UV1
vec2 uvUpdated=uv;
#endif
#ifdef UV2
vec2 uv2Updated=uv2;
#endif
#include<morphTargetsVertexGlobal>
#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]
vec3 offsetPosition=positionUpdated+(normalUpdated*offset);
#include<instancesVertex>
#include<bonesVertex>
#include<bakedVertexAnimation>
vec4 worldPos=finalWorld*vec4(offsetPosition,1.0);gl_Position=viewProjection*worldPos;
#ifdef ALPHATEST
#ifdef UV1
vUV=vec2(diffuseMatrix*vec4(uvUpdated,1.0,0.0));
#endif
#ifdef UV2
vUV=vec2(diffuseMatrix*vec4(uv2Updated,1.0,0.0));
#endif
#endif
#include<clipPlaneVertex>
#include<logDepthVertex>
}
`;
    if (!ShaderStore.ShadersStore[name]) {
      ShaderStore.ShadersStore[name] = shader;
    }
    outlineVertexShader = { name, shader };
  }
});

export {
  outlineVertexShader,
  init_outline_vertex
};
//# sourceMappingURL=chunk-2ZDORNHY.js.map
